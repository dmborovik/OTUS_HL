[mysqld]
######## wsrep ###############
# Path to Galera library
wsrep_on = ON
wsrep_provider=/usr/lib64/galera4/libgalera_smm.so
wsrep_provider_options=”socket.ssl_key=server-key.pem;socket.ssl_cert=server-cert.pem;socket.ssl_ca=ca.pem”

# Cluster connection URL contains IPs of nodes
#If no IP is found, this implies that a new cluster needs to be created,
#in order to do that you need to bootstrap this node

{% set cluster_members = [] -%}
{%- for node in groups['database'] %}
  {%- set _ = cluster_members.append(hostvars[node]['ansible_eth0'].ipv4.address) -%}
{% endfor -%}
wsrep_cluster_address=gcomm://{{ ",".join(cluster_members) }}

# In order for Galera to work correctly binlog format should be ROW
binlog_format=ROW

# Slave thread to use
wsrep_slave_threads=8

wsrep_log_conflicts

# This changes how InnoDB autoincrement locks are managed and is a requirement for Galera
innodb_autoinc_lock_mode=2

# Node IP address
wsrep_node_address={{ hostvars[inventory_hostname]['ansible_eth0'].ipv4.address }}
# Cluster name
wsrep_cluster_name={{ cluster_name }}

#If wsrep_node_name is not specified,  then system hostname will be used
wsrep_node_name={{ inventory_hostname }}

#pxc_strict_mode allowed values: DISABLED,PERMISSIVE,ENFORCING,MASTER
pxc_strict_mode=ENFORCING

# SST method
wsrep_sst_method=xtrabackup-v2

[sst]
encrypt=4
ssl-key=server-key.pem
ssl-ca=ca.pem
ssl-cert=server-cert.pem
