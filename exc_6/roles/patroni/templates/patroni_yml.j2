scope: pgsql
namespace: {{ cluster_name }}
name: {{ inventory_hostname }}

restapi:
    listen: {{hostvars[inventory_hostname]['ansible_eth1'].ipv4.address}}:8008
    connect_address: {{hostvars[inventory_hostname]['ansible_eth1'].ipv4.address}}:8008

etcd:
    hosts: {% for host in groups['databases'] %}{{ hostvars[host]['inventory_hostname'] }}:2379{% if not loop.last %},{% endif %}{% endfor %}

bootstrap:
    dcs:
        ttl: 100
        loop_wait: 10
        retry_timeout: 10
        maximum_lag_on_failover: 1048576
        postgresql:
            use_pg_rewind: true
            use_slots: true
            parameters:
                wal_level: replica
                hot_standby: "on"
                wal_keep_segments: 5120
                max_wal_senders: 5
                max_replication_slots: 5
                checkpoint_timeout: 30

    initdb:
    - encoding: UTF8
    - data-checksums
    - locale: en_US.UTF8
    pg_hba:
    - host replication postgres ::1/128 md5
    - host replication postgres 127.0.0.1/8 md5
    {% for host in groups['databases'] %}
- host replication postgres {{ hostvars[host]['ansible_eth1'].ipv4.address }}/24 md5
    {% endfor %}
- host all all 0.0.0.0/0 md5

    users:
        admin:
            password: admin
            options:
                - createrole
                - createdb

postgresql:
    listen: {{ hostvars[inventory_hostname]['ansible_eth1'].ipv4.address}}:5432
    connect_address: {{ hostvars[inventory_hostname]['ansible_eth1'].ipv4.address}}:5432
    data_dir: /data/patroni
    bin_dir: /usr/pgsql-{{pgsql_version}}/bin/
    pgpass: /tmp/pgpass
    authentication:
        replication:
            username: postgres
            password: postgres
        superuser:
            username: postgres
            password: postgres
    create_replica_methods:
        basebackup:
            checkpoint: 'fast'
    parameters:
        unix_socket_directories: '.'

tags:
    nofailover: false
    noloadbalance: false
    cloneform: false
    nosync: false

